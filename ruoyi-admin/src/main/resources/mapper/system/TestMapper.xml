<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TestMapper">
    
    <resultMap type="Test" id="TestResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="desciption"    column="desciption"    />
    </resultMap>

    <resultMap id="TestQuestionResult" type="Test" extends="TestResult">
        <collection property="questionList" notNullColumn="sub_id" javaType="java.util.List" resultMap="QuestionResult" />
    </resultMap>

    <resultMap type="Question" id="QuestionResult">
        <result property="id"    column="sub_id"    />
        <result property="question"    column="sub_question"    />
        <result property="groupId"    column="sub_group_id"    />
    </resultMap>

    <sql id="selectTestVo">
        select id, title, desciption from test
    </sql>

    <select id="selectTestList" parameterType="Test" resultMap="TestResult">
        <include refid="selectTestVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="title != null  and title != ''"> and title like concat('%', #{title}, '%')</if>
        </where>
    </select>
    
    <select id="selectTestById" parameterType="Long" resultMap="TestQuestionResult">
        select a.id, a.title, a.desciption,
 b.id as sub_id, b.question as sub_question, b.group_id as sub_group_id
        from test a
        left join question b on b.group_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertTest" parameterType="Test" useGeneratedKeys="true" keyProperty="id">
        insert into test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">title,</if>
            <if test="desciption != null">desciption,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">#{title},</if>
            <if test="desciption != null">#{desciption},</if>
         </trim>
    </insert>

    <update id="updateTest" parameterType="Test">
        update test
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null">title = #{title},</if>
            <if test="desciption != null">desciption = #{desciption},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTestById" parameterType="Long">
        delete from test where id = #{id}
    </delete>

    <delete id="deleteTestByIds" parameterType="String">
        delete from test where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteQuestionByGroupIds" parameterType="String">
        delete from question where group_id in 
        <foreach item="groupId" collection="array" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </delete>

    <delete id="deleteQuestionByGroupId" parameterType="Long">
        delete from question where group_id = #{groupId}
    </delete>

    <insert id="batchQuestion">
        insert into question( id, question, group_id) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.question}, #{item.groupId})
        </foreach>
    </insert>

</mapper>